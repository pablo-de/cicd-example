name: Docker Build and Push

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - backend/**

env:
  IMAGE_NAME: pokemon-app
  TAG_IMAGE: pokemon-app_${{ github.run_id }}_${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG_IMAGE }} -f ./backend/Dockerfile .
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG_IMAGE }}
          echo "La imagen ${{ env.IMAGE_NAME }} se subiÃ³ correctamente a Docker Hub"

  update:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup SSH Key and Git Config
        run: |
          echo "Starting update manifest job"
          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          git config user.name "${{ secrets.GIT_USER_NAME }}"
          git config user.email "${{ secrets.GIT_USER_EMAIL }}"

      - name: Clone Repository
        run: git clone --single-branch --branch main ${{ secrets.K8S_REPO }}

      - name: Update Manifest
        run: |
          cd helm/pokemon-app/
          sed -i "s/\(tag:\).*/\1 ${{ env.TAG_IMAGE }}/g" values.yaml
          cd ../..
          git add .
          git commit -m "Update tag to ${{ env.TAG_IMAGE }}"
          git push origin main

  tests:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run Linting
        run: |
          pip install flake8
          flake8 backend

      - name: Run Bandit (Security Check)
        run: |
          pip install bandit
          bandit -r backend
